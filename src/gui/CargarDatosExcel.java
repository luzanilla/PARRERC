/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import entidades.Alumno;
import entidades.ModeloExamen;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.poi.POIXMLException;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author UEE
 */
public final class CargarDatosExcel extends javax.swing.JDialog {

    private String nombreArchivo;
    private InputStream inp;
    private Workbook wb;
    private Sheet sheet;
    private Row row;
    private List<String> variables;
    private List<String> clavesRespuesta;  
    private List<String> temp;
    private List<Alumno> alumnos;
    private List<Alumno> alumnosOrdenada;
    private List<String> temp2;
    private List<String> opcionesRespuesta;   
    private List<ModeloExamen> modelosExamenes;    
    private Alumno alumno;
    private String variable_id;
    private String variable_municipio;
    private String variable_zona_escolar;
    private String variable_escuela;
    private String variable_turno;
    private String variable_grupo;
    private int indiceSujeto = 0;
    private int indiceModelo = 0;
    private int indice_inicio_items = 0;
    private int indice_fin_items = 0;    

    /**
     * Creates new form CargarDatosExcel
     */
    public CargarDatosExcel(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * Creates new form CargarDatosExcel
     */
    public CargarDatosExcel(java.awt.Frame parent, String nombreArchivoExcel) {
        super(parent);
        this.setNombreArchivo(nombreArchivoExcel);

        if (this.pruebaArchivo()) {
            initComponents();
            this.leerNombresVariables();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        boton_aceptar = new javax.swing.JButton();
        boton_cancelar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaVariables = new javax.swing.JList();
        boton_cambiar_id_sujeto = new javax.swing.JButton();
        boton_cambiar_municipio = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        lista_variable_id_sujeto = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        lista_variable_municipio = new javax.swing.JList();
        nombres_variables_primera_fila = new javax.swing.JCheckBox();
        clave_respuesta_segunda_fila = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        boton_cambiar_zona_escolar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        lista_variable_zona_escolar = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        boton_cambiar_escuela = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        lista_variable_escuela = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        lista_variable_turno = new javax.swing.JList();
        boton_cambiar_turno = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        boton_cambiar_grupo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        lista_variable_grupo = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cargar datos desde Excel");
        setModal(true);
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setResizable(false);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText(getNombreArchivo());
        jLabel1.setToolTipText("Nombre de archivo Excel");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel3.setText("Identificador de sujeto:");

        boton_aceptar.setText("Aceptar");
        boton_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_aceptarActionPerformed(evt);
            }
        });

        boton_cancelar.setText("Cancelar");
        boton_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cancelarActionPerformed(evt);
            }
        });

        jLabel4.setText("Municipio");

        listaVariables.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaVariables.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaVariablesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listaVariables);

        boton_cambiar_id_sujeto.setText(">");
        boton_cambiar_id_sujeto.setEnabled(false);
        boton_cambiar_id_sujeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cambiar_id_sujetoActionPerformed(evt);
            }
        });

        boton_cambiar_municipio.setText(">");
        boton_cambiar_municipio.setEnabled(false);
        boton_cambiar_municipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cambiar_municipioActionPerformed(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        lista_variable_id_sujeto.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista_variable_id_sujeto.setAutoscrolls(false);
        lista_variable_id_sujeto.setVisibleRowCount(1);
        lista_variable_id_sujeto.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lista_variable_id_sujetoValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lista_variable_id_sujeto);

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        lista_variable_municipio.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista_variable_municipio.setAutoscrolls(false);
        lista_variable_municipio.setVisibleRowCount(1);
        lista_variable_municipio.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lista_variable_municipioValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lista_variable_municipio);

        nombres_variables_primera_fila.setSelected(true);
        nombres_variables_primera_fila.setText("Nombres de variables en la primer fila.");
        nombres_variables_primera_fila.setEnabled(false);

        clave_respuesta_segunda_fila.setSelected(true);
        clave_respuesta_segunda_fila.setText("Clave de respuesta en la segunda fila.");
        clave_respuesta_segunda_fila.setEnabled(false);

        jLabel2.setText("Nombres de variables:");

        boton_cambiar_zona_escolar.setText(">");
        boton_cambiar_zona_escolar.setEnabled(false);
        boton_cambiar_zona_escolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cambiar_zona_escolarActionPerformed(evt);
            }
        });

        jScrollPane4.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane4.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        lista_variable_zona_escolar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista_variable_zona_escolar.setAutoscrolls(false);
        lista_variable_zona_escolar.setVisibleRowCount(1);
        lista_variable_zona_escolar.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lista_variable_zona_escolarValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(lista_variable_zona_escolar);

        jLabel5.setText("Zona escolar");

        boton_cambiar_escuela.setText(">");
        boton_cambiar_escuela.setEnabled(false);
        boton_cambiar_escuela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cambiar_escuelaActionPerformed(evt);
            }
        });

        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        lista_variable_escuela.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista_variable_escuela.setAutoscrolls(false);
        lista_variable_escuela.setVisibleRowCount(1);
        lista_variable_escuela.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lista_variable_escuelaValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(lista_variable_escuela);

        jLabel6.setText("Escuela");

        jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        lista_variable_turno.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista_variable_turno.setAutoscrolls(false);
        lista_variable_turno.setVisibleRowCount(1);
        lista_variable_turno.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lista_variable_turnoValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(lista_variable_turno);

        boton_cambiar_turno.setText(">");
        boton_cambiar_turno.setEnabled(false);
        boton_cambiar_turno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cambiar_turnoActionPerformed(evt);
            }
        });

        jLabel7.setText("Turno");

        boton_cambiar_grupo.setText(">");
        boton_cambiar_grupo.setEnabled(false);
        boton_cambiar_grupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_cambiar_grupoActionPerformed(evt);
            }
        });

        jLabel8.setText("Grupo");

        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        lista_variable_grupo.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista_variable_grupo.setAutoscrolls(false);
        lista_variable_grupo.setVisibleRowCount(1);
        lista_variable_grupo.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lista_variable_grupoValueChanged(evt);
            }
        });
        jScrollPane7.setViewportView(lista_variable_grupo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(boton_aceptar, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boton_cancelar, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                .addGap(96, 96, 96))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(boton_cambiar_municipio, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boton_cambiar_id_sujeto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boton_cambiar_zona_escolar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boton_cambiar_escuela, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boton_cambiar_turno, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(boton_cambiar_grupo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel2)
                    .addComponent(nombres_variables_primera_fila)
                    .addComponent(clave_respuesta_segunda_fila))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nombres_variables_primera_fila)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clave_respuesta_segunda_fila)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boton_cambiar_id_sujeto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boton_cambiar_municipio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boton_cambiar_zona_escolar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boton_cambiar_escuela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boton_cambiar_turno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(boton_cambiar_grupo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane7)))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_aceptar)
                    .addComponent(boton_cancelar))
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleParent(null);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_boton_cancelarActionPerformed

    private void listaVariablesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaVariablesValueChanged
        this.lista_variable_id_sujeto.clearSelection();
        this.lista_variable_municipio.clearSelection();
        this.lista_variable_zona_escolar.clearSelection();
        this.lista_variable_escuela.clearSelection();
        this.lista_variable_turno.clearSelection();
        this.lista_variable_grupo.clearSelection();

        if (this.listaVariables.getSelectedIndex() >= 0) {
            if (this.lista_variable_id_sujeto.getModel().getSize() == 0) {
                this.boton_cambiar_id_sujeto.setText(">");
                this.boton_cambiar_id_sujeto.setEnabled(true);
            } else {
                this.boton_cambiar_id_sujeto.setEnabled(false);
            }

            if (this.lista_variable_municipio.getModel().getSize() == 0) {
                this.boton_cambiar_municipio.setText(">");
                this.boton_cambiar_municipio.setEnabled(true);
            } else {
                this.boton_cambiar_municipio.setEnabled(false);
            }
            
            if (this.lista_variable_zona_escolar.getModel().getSize() == 0) {
                this.boton_cambiar_zona_escolar.setText(">");
                this.boton_cambiar_zona_escolar.setEnabled(true);
            } else {
                this.boton_cambiar_zona_escolar.setEnabled(false);
            }

            if (this.lista_variable_escuela.getModel().getSize() == 0) {
                this.boton_cambiar_escuela.setText(">");
                this.boton_cambiar_escuela.setEnabled(true);
            } else {
                this.boton_cambiar_escuela.setEnabled(false);
            }
            
            if (this.lista_variable_turno.getModel().getSize() == 0) {
                this.boton_cambiar_turno.setText(">");
                this.boton_cambiar_turno.setEnabled(true);
            } else {
                this.boton_cambiar_turno.setEnabled(false);
            }

            if (this.lista_variable_grupo.getModel().getSize() == 0) {
                this.boton_cambiar_grupo.setText(">");
                this.boton_cambiar_grupo.setEnabled(true);
            } else {
                this.boton_cambiar_grupo.setEnabled(false);
            }
        } else {
            this.boton_cambiar_id_sujeto.setEnabled(false);
            this.boton_cambiar_municipio.setEnabled(false);
            this.boton_cambiar_zona_escolar.setEnabled(false);
            this.boton_cambiar_escuela.setEnabled(false);
            this.boton_cambiar_turno.setEnabled(false);
            this.boton_cambiar_grupo.setEnabled(false);
        }

    }//GEN-LAST:event_listaVariablesValueChanged

    private void boton_cambiar_id_sujetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cambiar_id_sujetoActionPerformed
        temp = new ArrayList<>();                               

        if (this.boton_cambiar_id_sujeto.getText().equalsIgnoreCase(">")) {
            //Agregamos la variable a 
            temp.add(this.listaVariables.getModel().getElementAt(this.listaVariables.getSelectedIndex()).toString());
            this.lista_variable_id_sujeto.setListData(temp.toArray());

            //Cambiamos el modelo de datos
            temp2.remove(this.listaVariables.getSelectedIndex());
            this.listaVariables.setListData(temp2.toArray());
        } else {
            if (this.boton_cambiar_id_sujeto.getText().equalsIgnoreCase("<")) {                
                temp2.add(this.lista_variable_id_sujeto.getModel().getElementAt(this.lista_variable_id_sujeto.getSelectedIndex()).toString());
                this.listaVariables.setListData(temp2.toArray());

                this.lista_variable_id_sujeto.setListData(temp.toArray());
            }
        }

    }//GEN-LAST:event_boton_cambiar_id_sujetoActionPerformed

    private void boton_cambiar_municipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cambiar_municipioActionPerformed
        temp = new ArrayList<>();

        if (this.boton_cambiar_municipio.getText().equalsIgnoreCase(">")) {
            //Agregamos la variable a 
            temp.add(this.listaVariables.getModel().getElementAt(this.listaVariables.getSelectedIndex()).toString());
            this.lista_variable_municipio.setListData(temp.toArray());

            //Cambiamos el modelo de datos
            this.temp2.remove(this.listaVariables.getSelectedIndex());
            this.listaVariables.setListData(this.temp2.toArray());
        } else {
            if (this.boton_cambiar_municipio.getText().equalsIgnoreCase("<")) {
                this.temp2.add(this.lista_variable_municipio.getModel().getElementAt(this.lista_variable_municipio.getSelectedIndex()).toString());
                this.listaVariables.setListData(this.temp2.toArray());

                this.lista_variable_municipio.setListData(temp.toArray());
            }
        }

    }//GEN-LAST:event_boton_cambiar_municipioActionPerformed

    private void boton_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_aceptarActionPerformed
        try {
            if(this.lista_variable_id_sujeto.getModel().getSize()>0) {
                this.variable_id = this.lista_variable_id_sujeto.getModel().getElementAt(0).toString();
            }
            
            if(this.lista_variable_municipio.getModel().getSize()>0) {
                this.variable_municipio = this.lista_variable_municipio.getModel().getElementAt(0).toString();
            }
            
            if(this.lista_variable_zona_escolar.getModel().getSize()>0) {
                this.variable_zona_escolar = this.lista_variable_zona_escolar.getModel().getElementAt(0).toString();
            }
            
            if(this.lista_variable_escuela.getModel().getSize()>0) {
                this.variable_escuela = this.lista_variable_escuela.getModel().getElementAt(0).toString();
            }
            
            if(this.lista_variable_turno.getModel().getSize()>0) {
                this.variable_turno = this.lista_variable_turno.getModel().getElementAt(0).toString();
            }
            
            if(this.lista_variable_grupo.getModel().getSize()>0) {
                this.variable_grupo = this.lista_variable_grupo.getModel().getElementAt(0).toString();
            }            

            leeClaveRespuestas();
            calculaNumeroItems();
            leeDatos();
            calculaNumeroExaminados();
            ordenaDatos();
            calculaRango();                                               

            this.dispose();                        
        
            for(int j=0; j<this.modelosExamenes.size(); j++) { 
                
                this.modelosExamenes.get(j).setVarIdSujeto(this.variable_id);
                this.modelosExamenes.get(j).setVarMunicipio(this.variable_id);
                this.modelosExamenes.get(j).setVarZonaEscolar(this.variable_id);
                this.modelosExamenes.get(j).setVarEscuela(this.variable_id);
                this.modelosExamenes.get(j).setVarTurno(this.variable_id);
                this.modelosExamenes.get(j).setVarGrupo(this.variable_id);
                this.modelosExamenes.get(j).setVars_contexto(this.modelosExamenes.get(j).getVariables().subList(0, (this.modelosExamenes.get(j).getIndice_inicio_items()-1)));
                this.modelosExamenes.get(j).setVars_items( this.modelosExamenes.get(j).getVariables().subList(this.modelosExamenes.get(j).getIndice_inicio_items(), this.modelosExamenes.get(j).getIndice_fin_items()) );
                
                System.out.println("Opciones de respuesta: " + this.modelosExamenes.get(j).getNombreModelo());
                
                for (int i = 0; i < this.modelosExamenes.get(j).getOpcionesRespuesta().size(); i++) {
                    System.out.print(this.modelosExamenes.get(j).getOpcionesRespuesta().get(i) + ", ");
                }
                
                System.out.println("");
                
                System.out.println("Alumnos Ordenada: " + this.modelosExamenes.get(j).getNombreModelo());
                
                for (int i = 0; i < this.modelosExamenes.get(j).getAlumnosOrdenada().size(); i++) {
                    System.out.print(this.modelosExamenes.get(j).getAlumnosOrdenada().get(i).getAciertos() + ", ");
                }
                
                System.out.println("");
            }                       
            
            JOptionPane.showMessageDialog(this, "Base de datos cargada.", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            this.inp.close();
        } catch (IOException ex) {
            Logger.getLogger(CargarDatosExcel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_boton_aceptarActionPerformed

    private void lista_variable_id_sujetoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lista_variable_id_sujetoValueChanged
        //Quitamos los elementos seleccionados de los otros list
        this.listaVariables.clearSelection();
        this.lista_variable_municipio.clearSelection();
        this.lista_variable_zona_escolar.clearSelection();
        this.lista_variable_escuela.clearSelection();
        this.lista_variable_turno.clearSelection();
        this.lista_variable_grupo.clearSelection();

        if (this.lista_variable_id_sujeto.getSelectedIndex() >= 0) {
            //Cambiamos el sentido del botón y lo habilitamos
            this.boton_cambiar_id_sujeto.setText("<");
            this.boton_cambiar_id_sujeto.setEnabled(true);
        } else {
            this.boton_cambiar_id_sujeto.setEnabled(false);
        }

    }//GEN-LAST:event_lista_variable_id_sujetoValueChanged

    private void lista_variable_municipioValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lista_variable_municipioValueChanged
        //Quitamos los elementos seleccionados de los otros list
        this.listaVariables.clearSelection();
        this.lista_variable_id_sujeto.clearSelection();
        this.lista_variable_zona_escolar.clearSelection();
        this.lista_variable_escuela.clearSelection();
        this.lista_variable_turno.clearSelection();
        this.lista_variable_grupo.clearSelection();

        if (this.lista_variable_municipio.getSelectedIndex() >= 0) {
            //Cambiamos el sentido del botón y lo habilitamos
            this.boton_cambiar_municipio.setText("<");
            this.boton_cambiar_municipio.setEnabled(true);
        } else {
            this.boton_cambiar_municipio.setEnabled(false);
        }
    }//GEN-LAST:event_lista_variable_municipioValueChanged

    private void boton_cambiar_zona_escolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cambiar_zona_escolarActionPerformed
        temp = new ArrayList<>();

        if (this.boton_cambiar_zona_escolar.getText().equalsIgnoreCase(">")) {
            //Agregamos la variable a 
            temp.add(this.listaVariables.getModel().getElementAt(this.listaVariables.getSelectedIndex()).toString());
            this.lista_variable_zona_escolar.setListData(temp.toArray());

            //Cambiamos el modelo de datos
            this.temp2.remove(this.listaVariables.getSelectedIndex());
            this.listaVariables.setListData(this.temp2.toArray());
        } else {
            if (this.boton_cambiar_zona_escolar.getText().equalsIgnoreCase("<")) {
                this.temp2.add(this.lista_variable_zona_escolar.getModel().getElementAt(this.lista_variable_zona_escolar.getSelectedIndex()).toString());
                this.listaVariables.setListData(this.temp2.toArray());

                this.lista_variable_zona_escolar.setListData(temp.toArray());
            }
        }
    }//GEN-LAST:event_boton_cambiar_zona_escolarActionPerformed

    private void lista_variable_zona_escolarValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lista_variable_zona_escolarValueChanged
        //Quitamos los elementos seleccionados de los otros list
        this.listaVariables.clearSelection();
        this.lista_variable_id_sujeto.clearSelection();
        this.lista_variable_municipio.clearSelection();
        this.lista_variable_escuela.clearSelection();
        this.lista_variable_turno.clearSelection();
        this.lista_variable_grupo.clearSelection();

        if (this.lista_variable_zona_escolar.getSelectedIndex() >= 0) {
            //Cambiamos el sentido del botón y lo habilitamos
            this.boton_cambiar_zona_escolar.setText("<");
            this.boton_cambiar_zona_escolar.setEnabled(true);
        } else {
            this.boton_cambiar_zona_escolar.setEnabled(false);
        }
    }//GEN-LAST:event_lista_variable_zona_escolarValueChanged

    private void boton_cambiar_escuelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cambiar_escuelaActionPerformed
        temp = new ArrayList<>();

        if (this.boton_cambiar_escuela.getText().equalsIgnoreCase(">")) {
            //Agregamos la variable a 
            temp.add(this.listaVariables.getModel().getElementAt(this.listaVariables.getSelectedIndex()).toString());
            this.lista_variable_escuela.setListData(temp.toArray());

            //Cambiamos el modelo de datos
            this.temp2.remove(this.listaVariables.getSelectedIndex());
            this.listaVariables.setListData(this.temp2.toArray());
        } else {
            if (this.boton_cambiar_escuela.getText().equalsIgnoreCase("<")) {
                this.temp2.add(this.lista_variable_escuela.getModel().getElementAt(this.lista_variable_escuela.getSelectedIndex()).toString());
                this.listaVariables.setListData(this.temp2.toArray());

                this.lista_variable_escuela.setListData(temp.toArray());
            }
        }
    }//GEN-LAST:event_boton_cambiar_escuelaActionPerformed

    private void lista_variable_escuelaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lista_variable_escuelaValueChanged
        //Quitamos los elementos seleccionados de los otros list
        this.listaVariables.clearSelection();
        this.lista_variable_id_sujeto.clearSelection();
        this.lista_variable_municipio.clearSelection();
        this.lista_variable_zona_escolar.clearSelection();
        this.lista_variable_turno.clearSelection();
        this.lista_variable_grupo.clearSelection();

        if (this.lista_variable_escuela.getSelectedIndex() >= 0) {
            //Cambiamos el sentido del botón y lo habilitamos
            this.boton_cambiar_escuela.setText("<");
            this.boton_cambiar_escuela.setEnabled(true);
        } else {
            this.boton_cambiar_escuela.setEnabled(false);
        }
    }//GEN-LAST:event_lista_variable_escuelaValueChanged

    private void lista_variable_turnoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lista_variable_turnoValueChanged
        //Quitamos los elementos seleccionados de los otros list
        this.listaVariables.clearSelection();
        this.lista_variable_id_sujeto.clearSelection();
        this.lista_variable_municipio.clearSelection();
        this.lista_variable_zona_escolar.clearSelection();
        this.lista_variable_escuela.clearSelection();
        this.lista_variable_grupo.clearSelection();

        if (this.lista_variable_turno.getSelectedIndex() >= 0) {
            //Cambiamos el sentido del botón y lo habilitamos
            this.boton_cambiar_turno.setText("<");
            this.boton_cambiar_turno.setEnabled(true);
        } else {
            this.boton_cambiar_turno.setEnabled(false);
        }
    }//GEN-LAST:event_lista_variable_turnoValueChanged

    private void boton_cambiar_turnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cambiar_turnoActionPerformed
        temp = new ArrayList<>();

        if (this.boton_cambiar_turno.getText().equalsIgnoreCase(">")) {
            //Agregamos la variable a 
            temp.add(this.listaVariables.getModel().getElementAt(this.listaVariables.getSelectedIndex()).toString());
            this.lista_variable_turno.setListData(temp.toArray());

            //Cambiamos el modelo de datos
            this.temp2.remove(this.listaVariables.getSelectedIndex());
            this.listaVariables.setListData(this.temp2.toArray());
        } else {
            if (this.boton_cambiar_turno.getText().equalsIgnoreCase("<")) {
                this.temp2.add(this.lista_variable_turno.getModel().getElementAt(this.lista_variable_turno.getSelectedIndex()).toString());
                this.listaVariables.setListData(this.temp2.toArray());

                this.lista_variable_turno.setListData(temp.toArray());
            }
        }
    }//GEN-LAST:event_boton_cambiar_turnoActionPerformed

    private void boton_cambiar_grupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_cambiar_grupoActionPerformed
        temp = new ArrayList<>();

        if (this.boton_cambiar_grupo.getText().equalsIgnoreCase(">")) {
            //Agregamos la variable a 
            temp.add(this.listaVariables.getModel().getElementAt(this.listaVariables.getSelectedIndex()).toString());
            this.lista_variable_grupo.setListData(temp.toArray());

            //Cambiamos el modelo de datos
            this.temp2.remove(this.listaVariables.getSelectedIndex());
            this.listaVariables.setListData(this.temp2.toArray());
        } else {
            if (this.boton_cambiar_grupo.getText().equalsIgnoreCase("<")) {
                this.temp2.add(this.lista_variable_grupo.getModel().getElementAt(this.lista_variable_grupo.getSelectedIndex()).toString());
                this.listaVariables.setListData(this.temp2.toArray());

                this.lista_variable_grupo.setListData(temp.toArray());
            }
        }
    }//GEN-LAST:event_boton_cambiar_grupoActionPerformed

    private void lista_variable_grupoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lista_variable_grupoValueChanged
        //Quitamos los elementos seleccionados de los otros list
        this.listaVariables.clearSelection();
        this.lista_variable_id_sujeto.clearSelection();
        this.lista_variable_municipio.clearSelection();
        this.lista_variable_zona_escolar.clearSelection();
        this.lista_variable_escuela.clearSelection();
        this.lista_variable_turno.clearSelection();

        if (this.lista_variable_grupo.getSelectedIndex() >= 0) {
            //Cambiamos el sentido del botón y lo habilitamos
            this.boton_cambiar_grupo.setText("<");
            this.boton_cambiar_grupo.setEnabled(true);
        } else {
            this.boton_cambiar_grupo.setEnabled(false);
        }
    }//GEN-LAST:event_lista_variable_grupoValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CargarDatosExcel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                CargarDatosExcel dialog = new CargarDatosExcel(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_aceptar;
    private javax.swing.JButton boton_cambiar_escuela;
    private javax.swing.JButton boton_cambiar_grupo;
    private javax.swing.JButton boton_cambiar_id_sujeto;
    private javax.swing.JButton boton_cambiar_municipio;
    private javax.swing.JButton boton_cambiar_turno;
    private javax.swing.JButton boton_cambiar_zona_escolar;
    private javax.swing.JButton boton_cancelar;
    private javax.swing.JCheckBox clave_respuesta_segunda_fila;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JList listaVariables;
    private javax.swing.JList lista_variable_escuela;
    private javax.swing.JList lista_variable_grupo;
    private javax.swing.JList lista_variable_id_sujeto;
    private javax.swing.JList lista_variable_municipio;
    private javax.swing.JList lista_variable_turno;
    private javax.swing.JList lista_variable_zona_escolar;
    private javax.swing.JCheckBox nombres_variables_primera_fila;
    // End of variables declaration//GEN-END:variables

    private void leerNombresVariables() {
        modelosExamenes = new ArrayList<>();
        
        for(int i=0; i<wb.getNumberOfSheets(); i++) {
            ModeloExamen modeloExamen = new ModeloExamen();
            
            variables = new ArrayList<>();

            sheet = wb.getSheetAt(i);
            modeloExamen.setNombreModelo(sheet.getSheetName());

            row = sheet.getRow(0);

            for (Cell cell : row) {
                try {
                    switch (cell.getCellType()) {
                        case Cell.CELL_TYPE_STRING:
                            System.out.println(cell.getRichStringCellValue().getString());
                            variables.add(cell.getRichStringCellValue().getString());
                            break;
                        case Cell.CELL_TYPE_NUMERIC:
                            System.out.println(Double.toString(cell.getNumericCellValue()));
                            variables.add(Integer.toString((int) cell.getNumericCellValue()));
                            break;
                    }
                } catch (IllegalStateException ex) {
                    Logger.getLogger(CargarDatosExcel.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Error al leer los nombres de las variables.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }

            this.listaVariables.setListData(variables.toArray());
            temp2 = new ArrayList<>(this.variables.subList(0, variables.size()));
            
            modeloExamen.setVariables(variables);
            
            this.modelosExamenes.add(modeloExamen);
        }
                        
    }

    private boolean pruebaArchivo() {
        try {
            inp = new FileInputStream(nombreArchivo);

            String ext = nombreArchivo.substring(nombreArchivo.length() - 3);

            if (ext.equalsIgnoreCase("xls")) {
                wb = new HSSFWorkbook(inp);
            } else {
                if (ext.equalsIgnoreCase("lsx")) {
                    wb = new XSSFWorkbook(inp);
                }
            }            

            return true;

        } catch (IOException | POIXMLException ex) {
            Logger.getLogger(CargarDatosExcel.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al abrir el archivo.", "Error", JOptionPane.ERROR_MESSAGE);

            return false;
        }

    }

    private void leeClaveRespuestas() {
        
        for(int j=0; j<this.modelosExamenes.size(); j++) {
            clavesRespuesta = new ArrayList<>();
            
            sheet = wb.getSheetAt(j);            
            row = sheet.getRow(1);
            
            int i = 0;

            for (Cell cell : row) {
                i++;

                try {                
                    if(i==1) {
                        this.indice_inicio_items = cell.getColumnIndex();
                        //System.out.println("indice_inicio_items: " + indice_inicio_items);
                    }

                    switch (cell.getCellType()) {
                        case Cell.CELL_TYPE_STRING:

                            if (!cell.getRichStringCellValue().getString().isEmpty()) {
                                //System.out.println(i + " " + cell.getRichStringCellValue().getString());
                                clavesRespuesta.add(cell.getRichStringCellValue().getString());
                            } else {
                                System.out.println("VACIO S");
                            }

                            break;
                        case Cell.CELL_TYPE_NUMERIC:
                            if (cell.getNumericCellValue() != 0) {
                                //System.out.println(i + " " + Double.toString(cell.getNumericCellValue()));
                                clavesRespuesta.add(Double.toString(cell.getNumericCellValue()));
                            } else {
                                System.out.println("VACIO N");
                            }

                            break;
                    }

                } catch (IllegalStateException ex) {
                    Logger.getLogger(CargarDatosExcel.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Error al leer los nombres de las variables.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }

            indice_fin_items = indice_inicio_items + (i-1);
            //System.out.println("indice_fin_items: " + indice_fin_items);
                        
            this.modelosExamenes.get(j).setIndice_inicio_items(indice_inicio_items);
            this.modelosExamenes.get(j).setIndice_fin_items(indice_fin_items);
            this.modelosExamenes.get(j).setClavesRespuesta(clavesRespuesta);
        }
        
        
    }
    
    private void calculaNumeroItems() {
        for (int i = 0; i < this.modelosExamenes.size(); i++) {
            int numero_de_items = (this.modelosExamenes.get(i).getIndice_fin_items() - this.modelosExamenes.get(i).getIndice_inicio_items()) + 1;

            this.modelosExamenes.get(i).setNumero_de_items(numero_de_items);
        }
    }

    private void leeDatos() {
        
        for(int j=0; j<this.modelosExamenes.size(); j++) {
            sheet = wb.getSheetAt(j);
            
            alumnos = new ArrayList<>();
            opcionesRespuesta = new ArrayList<>();
            int contRenglones = 0;

            System.out.println("Variables size: " + this.modelosExamenes.get(j).getVariables().size());

            for (Row row_temp : sheet) {
                contRenglones++;

                try {
                    //Omitimos los dos primeros renglones (nombres_variables y clave_respuesta)
                    if(contRenglones>2) {
                        alumno = new Alumno(this.modelosExamenes.get(j).getClavesRespuesta().size());
                        int i = 0;

                        for (Cell cell : row_temp) {
                            boolean flag = true;

                            //System.out.println("Columna: " + this.variables.get(cell.getColumnIndex()));

                            if( this.modelosExamenes.get(j).getVariables().get(cell.getColumnIndex()).equalsIgnoreCase(this.variable_id) ) {                            
                                alumno.setId(getValorCeldaEnString(cell));                            
                                flag = false;
                            }                        
                            
                            alumno.setModelo(sheet.getSheetName());                            
                            alumno.addRespuesta(getValorCeldaEnString(cell)); 

                            if( (cell.getColumnIndex() >= this.modelosExamenes.get(j).getIndice_inicio_items()) && (cell.getColumnIndex() <= this.modelosExamenes.get(j).getIndice_fin_items()) ) {
                                agregaOpcionRespuesta(getValorCeldaEnString(cell));

                                if(this.modelosExamenes.get(j).getClavesRespuesta().get(i).equalsIgnoreCase(alumno.getRespuesta(i+this.modelosExamenes.get(j).getIndice_inicio_items()))) {
                                    alumno.addRespuestaCalificada(1, i);
                                } else {
                                    alumno.addRespuestaCalificada(0, i);
                                }

                                i++;
                            }

                        }

                        alumno.setAciertos(califica(alumno, j));
                        alumnos.add(alumno);                    
                    }                

                } catch (IllegalStateException ex) {
                    Logger.getLogger(CargarDatosExcel.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Error al leer los nombres de las variables.", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
            
            this.modelosExamenes.get(j).setAlumnos(alumnos);
            this.modelosExamenes.get(j).setOpcionesRespuesta(opcionesRespuesta);            
        }
                
    }
    
    private void calculaNumeroExaminados() {
        for (int i = 0; i < this.modelosExamenes.size(); i++) {
            int numero_de_examinados = this.modelosExamenes.get(i).getAlumnos().size();

            this.modelosExamenes.get(i).setNumero_de_examinados(numero_de_examinados);
        }
    } 

    private String getValorCeldaEnString(Cell celda) {
        String valor = "";
        
        switch (celda.getCellType()) {                                                        
            case Cell.CELL_TYPE_STRING:

                if (!celda.getRichStringCellValue().getString().isEmpty()) {                                    
                    //System.out.println(celda.getRichStringCellValue().getString());
                    valor = celda.getRichStringCellValue().getString();                    
                } else {
                    //System.out.println(celda.getRichStringCellValue().getString());
                    valor = ".";
                }

                break;
            case Cell.CELL_TYPE_NUMERIC:
                if (celda.getNumericCellValue() != 0) {
                    //System.out.println(Double.toString(celda.getNumericCellValue()));
                    valor = Double.toString(celda.getNumericCellValue());
                } else {
                    //System.out.println("");
                    valor = ".";
                }

                break;
        }
        
        return valor;
    }

    //Evalua las respuestas del alumno y regresa el número de aciertos obtenidos
    public int califica(Alumno a, int j) {
        int aciertos = 0;

        for (int i = 0; i < this.modelosExamenes.get(j).getClavesRespuesta().size(); i++) {            
            aciertos += a.getRespuestaCalificada(i);                        
        }

        //System.out.println(a.getId() + ".- Aciertos: " + aciertos);
        return aciertos;
    }

    private void ordenaDatos() {
        for(int k=0; k<this.modelosExamenes.size(); k++) {
            alumnosOrdenada = new ArrayList<>();
            int j = 0, i;

            for (Alumno a : this.modelosExamenes.get(k).getAlumnos()) {
                j++;
                //System.out.print(j + " ");
                if (alumnosOrdenada.isEmpty()) {
                    //System.out.println("Alumno0: " + a.getId());
                    alumnosOrdenada.add(a);
                } else {
                    for (i = 0; i < alumnosOrdenada.size(); i++) {
                        if (a.getAciertos() > alumnosOrdenada.get(i).getAciertos()) {
                            //System.out.println("Alumno2: " + a.getId());
                            alumnosOrdenada.add(i, a);
                            break;
                        }
                    }

                    if (i == alumnosOrdenada.size()) {
                        //System.out.println("Alumno1: " + a.getId());
                        alumnosOrdenada.add(a);
                    }

                }

                //System.out.println(alumnosOrdenada.size());
            }
            
            this.modelosExamenes.get(k).setAlumnosOrdenada(alumnosOrdenada);
        }        
    }

    private void calculaRango() {
        for (int i = 0; i < this.modelosExamenes.size(); i++) {
            int rango_minimo = this.modelosExamenes.get(i).getAlumnosOrdenada().get(this.modelosExamenes.get(i).getAlumnosOrdenada().size() - 1).getAciertos();
            int rango_maximo = this.modelosExamenes.get(i).getAlumnosOrdenada().get(0).getAciertos();

            this.modelosExamenes.get(i).setRango_minimo(rango_minimo);
            this.modelosExamenes.get(i).setRango_maximo(rango_maximo);
        }
    }
    
    private void agregaOpcionRespuesta(String valorCeldaEnString) {
        if(!opcionesRespuesta.contains(valorCeldaEnString)) {
            opcionesRespuesta.add(valorCeldaEnString);            
        }
    }        
    
    public void pintaLista(List lista, String titulo) {
        System.out.println(titulo);
        
        for (int i = 0; i < lista.size(); i++) {
            System.out.print(lista.get(i) + ", ");
        }
        
    }
    
    public List<String> getVariables() {
        return this.variables;
    }

    public List<String> getClavesRespuesta() {
        return this.clavesRespuesta;
    }
    
    public List<String> getOpcionesRespuesta() {
        return opcionesRespuesta;
    }

    public List<Alumno> getAlumnos() {
        return this.alumnos;
    }
    
    public List<Alumno> getAlumnosOrdenada() {
        return this.alumnosOrdenada;
    }

    public int getIndice_inicio_items() {
        return this.indice_inicio_items;
    }
    
    public int getIndice_fin_items() {
        return (this.indice_fin_items+1);
    }       

    public String getNombreArchivo() {
        return nombreArchivo;
    }

    public void setNombreArchivo(String nombreArchivo) {
        this.nombreArchivo = nombreArchivo;
    }
    
    public List<ModeloExamen> getModelosExamenes() {
        return modelosExamenes;
    }

    
}
