/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import entidades.Alumno;
import entidades.Escuela;
import entidades.Grupo;
import entidades.ModeloExamen;
import entidades.Turno;
import java.awt.Color;
import java.awt.Dimension;
import java.io.File;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author UEE
 */
public class InformeDocentes extends javax.swing.JInternalFrame {

    private List<ModeloExamen> modelosExamenes;
    private String modelo;
    private String municipio;
    private String zona_escolar;
    private String escuela;
    private String turno;
    private String grupo;
    
    private int i_modelo;
    private int i_municipio;
    private int i_zona_escolar;
    private int i_escuela;
    private int i_turno;
    private int i_grupo;
    
    private double promedio_grupo;
    private double porcentaje_aciertos_grupo;
    
    private double promedio_escuela;
    private double porcentaje_aciertos_escuela;
    
    private JFreeChart grafica_grupos_escuela; 
    private List<JFreeChart> graficas_turnos_ua;
    
    /**
     * Creates new form InformeDocentes
     */
    public InformeDocentes(List<ModeloExamen> modelosExamenes, JDesktopPane jDesktopPane1) {
        this.modelosExamenes = modelosExamenes;        
        
        initComponents();
        
        llenarSelects();
        
        this.jDialog1.pack();
        this.jDialog1.setLocationRelativeTo(null);
        this.jDialog1.setVisible(true);
        
        Dimension desktopSize = jDesktopPane1.getSize();
        Dimension jInternalFrameSize = this.getSize();

        this.setLocation((desktopSize.width - jInternalFrameSize.width)/2, (desktopSize.height- jInternalFrameSize.height)/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        combo_escuela = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        combo_grupo = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        combo_turno = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        combo_modelo = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        combo_zona = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        combo_municipio = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        botonAceptar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel_resultados = new javax.swing.JEditorPane();

        jDialog1.setTitle("Informe de resultados para profesores");
        jDialog1.setModal(true);
        jDialog1.setResizable(false);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(214, 217, 223));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Los profesores son los actores del proceso educativo cuya funci칩n es la de facilitar los conocimientos y procedimientos constituidos como los fundamentales para la formaci칩n de los alumnos. Para cumplir esta funci칩n, el profesor requiere planear, desarrollar y evaluar procesos de ense침anza a fin de favorecer el aprendizaje.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Los profesores", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jTextArea1.setFocusable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("Escuela:");

        combo_escuela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_escuelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(combo_escuela, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(combo_escuela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel2.setText("Grupo:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(combo_grupo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(combo_grupo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel3.setText("Turno:");

        combo_turno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_turnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(combo_turno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(combo_turno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel4.setText("Modelo de examen:");

        combo_modelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_modeloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 35, Short.MAX_VALUE))
                    .addComponent(combo_modelo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(combo_modelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel5.setText("Zona escolar:");

        combo_zona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_zonaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(combo_zona, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(combo_zona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel6.setText("Municipio:");

        combo_municipio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_municipioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(0, 82, Short.MAX_VALUE))
                    .addComponent(combo_municipio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(combo_municipio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel2, jPanel3, jPanel5, jPanel8});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel4, jPanel6});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(botonAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(127, 127, 127))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextArea1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Informe de resultados para profesores");
        setMinimumSize(new java.awt.Dimension(250, 400));

        panel_resultados.setEditable(false);
        panel_resultados.setContentType("text/html");
        jScrollPane1.setViewportView(panel_resultados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        this.jDialog1.setVisible(false);
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void combo_modeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_modeloActionPerformed
        int indice_seleccionado = this.combo_modelo.getSelectedIndex();
        
        //Llenamos el combo de Municipio
        //this.combo_municipio.removeAllItems();
        DefaultComboBoxModel model_municipio = new DefaultComboBoxModel(this.modelosExamenes.get(indice_seleccionado).getOpciones_respuesta_municipio().toArray());                        
        this.combo_municipio.setModel(model_municipio);
        
        //Llenamos el cobo de Zona Escolar
        //this.combo_zona.removeAllItems();
        DefaultComboBoxModel model_zona = new DefaultComboBoxModel(); 
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[0].size(); i++) {
            model_zona.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[0].get(i).getNombre_zona_escolar());
        }
        
        this.combo_zona.setModel(model_zona);
        
        //Llenamos el combo de Escuelas
        //this.combo_escuela.removeAllItems();
        DefaultComboBoxModel model_escuela = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[0].get(0).getEscuelas().size(); i++) {
            model_escuela.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[0].get(0).getEscuelas().get(i).getId_escuela());
        }
        
        this.combo_escuela.setModel(model_escuela);
        
        //LLenamos el combo del Turno 
        //this.combo_turno.removeAllItems();
        DefaultComboBoxModel model_turno = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[0].get(0).getEscuelas().get(0).getTurnos().size(); i++) {
            model_turno.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[0].get(0).getEscuelas().get(0).getTurnos().get(i).getId_turno());
        }
        
        this.combo_turno.setModel(model_turno);
        
        //LLenamos el combo del Grupo  
        //this.combo_grupo.removeAllItems();
        DefaultComboBoxModel model_grupo = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[0].get(0).getEscuelas().get(0).getTurnos().get(0).getGrupos().size(); i++) {
            model_grupo.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[0].get(0).getEscuelas().get(0).getTurnos().get(0).getGrupos().get(i).getId_grupo());
        }
        
        this.combo_grupo.setModel(model_grupo);
    }//GEN-LAST:event_combo_modeloActionPerformed

    private void combo_municipioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_municipioActionPerformed
        int indice_seleccionado = this.combo_modelo.getSelectedIndex();
        int municipio_seleccionado = this.combo_municipio.getSelectedIndex();
        
        //Llenamos el cobo de Zona Escolar
        //this.combo_zona.removeAllItems();
        DefaultComboBoxModel model_zona = new DefaultComboBoxModel(); 
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].size(); i++) {
            model_zona.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(i).getNombre_zona_escolar());
        }
        
        this.combo_zona.setModel(model_zona);
        
        //Llenamos el combo de Escuelas
        //this.combo_escuela.removeAllItems();
        DefaultComboBoxModel model_escuela = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(0).getEscuelas().size(); i++) {
            model_escuela.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(0).getEscuelas().get(i).getId_escuela());
        }
        
        this.combo_escuela.setModel(model_escuela);
        
        //LLenamos el combo del Turno 
        //this.combo_turno.removeAllItems();
        DefaultComboBoxModel model_turno = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(0).getEscuelas().get(0).getTurnos().size(); i++) {
            model_turno.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(0).getEscuelas().get(0).getTurnos().get(i).getId_turno());
        }
        
        this.combo_turno.setModel(model_turno);
        
        //LLenamos el combo del Grupo  
        //this.combo_grupo.removeAllItems();
        DefaultComboBoxModel model_grupo = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(0).getEscuelas().get(0).getTurnos().get(0).getGrupos().size(); i++) {
            model_grupo.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(0).getEscuelas().get(0).getTurnos().get(0).getGrupos().get(i).getId_grupo());
        }
        
        this.combo_grupo.setModel(model_grupo);
    }//GEN-LAST:event_combo_municipioActionPerformed

    private void combo_zonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_zonaActionPerformed
        int indice_seleccionado = this.combo_modelo.getSelectedIndex();
        int municipio_seleccionado = this.combo_municipio.getSelectedIndex();
        int zona_seleccionada = this.combo_zona.getSelectedIndex();                
        
        //Llenamos el combo de Escuelas
        //this.combo_escuela.removeAllItems();
        DefaultComboBoxModel model_escuela = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().size(); i++) {
            model_escuela.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(i).getId_escuela());
        }
        
        this.combo_escuela.setModel(model_escuela);
        
        //LLenamos el combo del Turno 
        //this.combo_turno.removeAllItems();
        DefaultComboBoxModel model_turno = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(0).getTurnos().size(); i++) {
            model_turno.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(0).getTurnos().get(i).getId_turno());
        }
        
        this.combo_turno.setModel(model_turno);
        
        //LLenamos el combo del Grupo  
        //this.combo_grupo.removeAllItems();
        DefaultComboBoxModel model_grupo = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(0).getTurnos().get(0).getGrupos().size(); i++) {
            model_grupo.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(0).getTurnos().get(0).getGrupos().get(i).getId_grupo());
        }
        
        this.combo_grupo.setModel(model_grupo);
    }//GEN-LAST:event_combo_zonaActionPerformed

    private void combo_escuelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_escuelaActionPerformed
        int indice_seleccionado = this.combo_modelo.getSelectedIndex();
        int municipio_seleccionado = this.combo_municipio.getSelectedIndex();
        int zona_seleccionada = this.combo_zona.getSelectedIndex();                
        int escuela_seleccionada = this.combo_escuela.getSelectedIndex(); 
                
        //LLenamos el combo del Turno 
        //this.combo_turno.removeAllItems();
        DefaultComboBoxModel model_turno = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(escuela_seleccionada).getTurnos().size(); i++) {
            model_turno.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(escuela_seleccionada).getTurnos().get(i).getId_turno());
        }
        
        this.combo_turno.setModel(model_turno);
        
        //LLenamos el combo del Grupo  
        //this.combo_grupo.removeAllItems();
        DefaultComboBoxModel model_grupo = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(escuela_seleccionada).getTurnos().get(0).getGrupos().size(); i++) {
            model_grupo.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(escuela_seleccionada).getTurnos().get(0).getGrupos().get(i).getId_grupo());
        }
        
        this.combo_grupo.setModel(model_grupo);
    }//GEN-LAST:event_combo_escuelaActionPerformed

    private void combo_turnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_turnoActionPerformed
        int indice_seleccionado = this.combo_modelo.getSelectedIndex();
        int municipio_seleccionado = this.combo_municipio.getSelectedIndex();
        int zona_seleccionada = this.combo_zona.getSelectedIndex();                
        int escuela_seleccionada = this.combo_escuela.getSelectedIndex();
        int turno_seleccionado = this.combo_turno.getSelectedIndex();
                        
        //LLenamos el combo del Grupo  
        //this.combo_grupo.removeAllItems();
        DefaultComboBoxModel model_grupo = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(escuela_seleccionada).getTurnos().get(turno_seleccionado).getGrupos().size(); i++) {
            model_grupo.addElement(this.modelosExamenes.get(indice_seleccionado).getZona_escolar_por_municipio()[municipio_seleccionado].get(zona_seleccionada).getEscuelas().get(escuela_seleccionada).getTurnos().get(turno_seleccionado).getGrupos().get(i).getId_grupo());
        }
        
        this.combo_grupo.setModel(model_grupo);
    }//GEN-LAST:event_combo_turnoActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        this.modelo = (String) this.combo_modelo.getSelectedItem();
        this.i_modelo = this.combo_modelo.getSelectedIndex();
        
        this.municipio = (String) this.combo_municipio.getSelectedItem();
        this.i_municipio = this.combo_municipio.getSelectedIndex();
        
        this.zona_escolar = (String) this.combo_zona.getSelectedItem();
        this.i_zona_escolar = this.combo_zona.getSelectedIndex();
        
        this.escuela = (String) this.combo_escuela.getSelectedItem();
        this.i_escuela = this.combo_escuela.getSelectedIndex();
        
        this.turno = (String) this.combo_turno.getSelectedItem();
        this.i_turno = this.combo_turno.getSelectedIndex();
        
        this.grupo = (String) this.combo_grupo.getSelectedItem();
        this.i_grupo = this.combo_grupo.getSelectedIndex();
        
        this.promedio_grupo = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(i_turno).getGrupos().get(i_grupo).getPuntaje_promedio_grupo();
        this.porcentaje_aciertos_grupo = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(i_turno).getGrupos().get(i_grupo).getPorcentaje_aciertos_grupo();
        this.promedio_escuela = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getPuntaje_promedio_escuela();
        this.porcentaje_aciertos_escuela = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getPorcentaje_aciertos_escuela();
        
        crearGraficas();
        guardarImagenes();
        
        pintarResultados();
        
        this.jDialog1.setVisible(false);
        this.setVisible(true);
    }//GEN-LAST:event_botonAceptarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JComboBox combo_escuela;
    private javax.swing.JComboBox combo_grupo;
    private javax.swing.JComboBox combo_modelo;
    private javax.swing.JComboBox combo_municipio;
    private javax.swing.JComboBox combo_turno;
    private javax.swing.JComboBox combo_zona;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JEditorPane panel_resultados;
    // End of variables declaration//GEN-END:variables

    private void llenarSelects() {
        //Llenamos el combo de Modelo de Examen
        DefaultComboBoxModel model_modelo = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.size(); i++) {
            model_modelo.addElement(this.modelosExamenes.get(i).getNombreModelo());
        }
        
        this.combo_modelo.setModel(model_modelo);
        
        //Llenamos el combo de Municipio
        DefaultComboBoxModel model_municipio = new DefaultComboBoxModel(this.modelosExamenes.get(0).getOpciones_respuesta_municipio().toArray());                        
        this.combo_municipio.setModel(model_municipio);
        
        //Llenamos el cobo de Zona Escolar
        DefaultComboBoxModel model_zona = new DefaultComboBoxModel(); 
        
        for(int i=0; i<this.modelosExamenes.get(0).getZona_escolar_por_municipio()[0].size(); i++) {
            model_zona.addElement(this.modelosExamenes.get(0).getZona_escolar_por_municipio()[0].get(i).getNombre_zona_escolar());
        }
        
        this.combo_zona.setModel(model_zona);
        
        //Llenamos el combo de Escuelas
        DefaultComboBoxModel model_escuela = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(0).getZona_escolar_por_municipio()[0].get(0).getEscuelas().size(); i++) {
            model_escuela.addElement(this.modelosExamenes.get(0).getZona_escolar_por_municipio()[0].get(0).getEscuelas().get(i).getId_escuela());
        }
        
        this.combo_escuela.setModel(model_escuela);
        
        //LLenamos el combo del Turno        
        DefaultComboBoxModel model_turno = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(0).getZona_escolar_por_municipio()[0].get(0).getEscuelas().get(0).getTurnos().size(); i++) {
            model_turno.addElement(this.modelosExamenes.get(0).getZona_escolar_por_municipio()[0].get(0).getEscuelas().get(0).getTurnos().get(i).getId_turno());
        }
        
        this.combo_turno.setModel(model_turno);
        
        //LLenamos el combo del Grupo        
        DefaultComboBoxModel model_grupo = new DefaultComboBoxModel();
        
        for(int i=0; i<this.modelosExamenes.get(0).getZona_escolar_por_municipio()[0].get(0).getEscuelas().get(0).getTurnos().get(0).getGrupos().size(); i++) {
            model_grupo.addElement(this.modelosExamenes.get(0).getZona_escolar_por_municipio()[0].get(0).getEscuelas().get(0).getTurnos().get(0).getGrupos().get(i).getId_grupo());
        }
        
        this.combo_grupo.setModel(model_grupo);
    }
    
    private void crearGraficas() {                                                                                                                                                                       
        //Creamos las graficas por grupo        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();        

        for(int m=0; m<this.modelosExamenes.get(i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().size(); m++) {
            String nombre_turno = this.modelosExamenes.get(i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(m).getId_turno();                                

            for(int n=0; n<this.modelosExamenes.get(i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(m).getGrupos().size(); n++) {
                    String nombre_grupo = this.modelosExamenes.get(i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(m).getGrupos().get(n).getId_grupo();
                    dataset.setValue(this.modelosExamenes.get(i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(m).getGrupos().get(n).getPorcentaje_aciertos_grupo(), nombre_grupo, nombre_turno);
            }

        }
        
        grafica_grupos_escuela = ChartFactory.createBarChart("Escuela " + this.escuela, "Turnos", "Porcentaje", dataset, PlotOrientation.VERTICAL, true, true, true);

        grafica_grupos_escuela.setBackgroundPaint(Color.white);

        final CategoryPlot plot = (CategoryPlot) grafica_grupos_escuela.getPlot();

        plot.setBackgroundPaint(new Color(240, 240, 240));
        plot.setRangeGridlinePaint(Color.darkGray);
        plot.setRangeGridlinesVisible(true);
        plot.setDomainGridlinePaint(Color.darkGray);            

        final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setUpperBound(105);

        // customise the renderer...
        final BarRenderer renderer = (BarRenderer) plot.getRenderer();        
        //renderer.setDrawShapes(true);
        renderer.setSeriesPaint(0, new Color(79, 129, 189));
        renderer.setMaximumBarWidth(.15);
        renderer.setItemMargin(.02);

        renderer.setSeriesItemLabelGenerator(0, new StandardCategoryItemLabelGenerator());
        renderer.setSeriesItemLabelsVisible(0, true);                        
        renderer.setSeriesVisible(0, true);

        renderer.setSeriesItemLabelGenerator(1, new StandardCategoryItemLabelGenerator());
        renderer.setSeriesItemLabelsVisible(1, true);                        
        renderer.setSeriesVisible(1, true);                    

        plot.setRenderer(renderer);       
        
        crearGraficasUA();                  
    }
    
    private void guardarImagenes() {
        File dir = new File("temp\\inf_docentes");                
        
        if(dir.exists()) {
            borrarDirectorio(dir);                                   
        }        
        
        if (dir.mkdirs()) {                                                                                               
            
            try {                        
                ChartUtilities.saveChartAsPNG(new java.io.File("temp\\inf_docentes\\grupos_escuela.PNG"), grafica_grupos_escuela, 500, 300);                                                
            } catch (java.io.IOException exc) {
                JOptionPane.showMessageDialog(this, "Error al guardar las imagenes.", "Error", JOptionPane.ERROR_MESSAGE);                            

            }     
            
            try { 
                for(int i=0; i<this.graficas_turnos_ua.size(); i++) {
                    ChartUtilities.saveChartAsPNG(new java.io.File("temp\\inf_docentes\\grafica_ua" + i + ".PNG"), graficas_turnos_ua.get(i), 500, 300);                                                
                }
                
            } catch (java.io.IOException exc) {
                JOptionPane.showMessageDialog(this, "Error al guardar las imagenes.", "Error", JOptionPane.ERROR_MESSAGE);                            

            }
            
        } else {
            JOptionPane.showMessageDialog(this, "Error al crear el directorio temporal para imagenes.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        //this.jDialog1.setVisible(false);
    }
    
    private void borrarDirectorio(File directorio) {
        File[] ficheros = directorio.listFiles();
 
        for (int x=0;x<ficheros.length;x++) {
            
            if (ficheros[x].isDirectory()) {
                borrarDirectorio(ficheros[x]);
            }
            
            ficheros[x].delete();
        }
        
        directorio.delete();
    }

    private void pintarResultados() {
        DecimalFormat df = new DecimalFormat("0.000");
        
        String out = "<table align\"center\" width=\"80%\" border=\"0\" cellspacing=\"10px\" cellpadding=\"0\">";
        out = out + "<tr>"
                    + "<th scope=\"col\"><h2>Informe de resultados generales para Docentes.</h2></th>"
                + "  </tr>";
       
        //Abrimos rengl칩n de la tabla principal
        out = out + "<tr>";
        out = out + "<td>"; 
        
        out = out + "<table align=\"center\" width=\"60%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">";                
        out = out + "<tr>";
        out = out + "<td>Los estudiantes del grupo <strong>" + this.grupo + "</strong> obtuvieron un puntaje promedio de <strong>" + df.format(this.promedio_grupo) + "</strong> el cual es <strong>" + getTextoCompGrupoEsc() + "</strong> al puntaje promedio de todos los estudiantes examinados en esta escuela, el cual se muestra en la tabla 2. El puntaje m&aacute;s alto de este grupo fue de <strong>" + getMaxPuntajeGrupo() + "</strong> y el m&aacute;s bajo fue de <strong>" + getMinPuntajeGrupo() + "</strong>.<br /></td>";        
        out = out + "</tr>";
        out = out + "</table>";
        
        //cerramos rengl칩n de tabla principal                
        out = out + "</td>";
        out = out + "</tr>";
                        
        //abrimos rengl칩n de tabla principal
        out = out + "<tr>";
        out = out + "<td style=\"text-align:center; border:0;\">";        
        
        //Imprimimos la tabla con los puntajes de los alumnos del grupo seleccionado
        out = out +
                "<table align=\"center\" width=\"50%\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">" 
                + "<caption style=\"text-align:left; font-weight:bold; font-size: 9px;\">Tabla 1. Resultados generales del grupo " + this.grupo + " del turno " + this.turno + " de la escuela " + this.escuela + " de la zona escolar " + this.zona_escolar + " del municipio de " + this.municipio + ".</caption>"
                + "<tr>";

        out = out + "<td style=\"text-align:center; font-weight:bold;\">Grupo</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">No. de examen</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">Puntaje</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">Porcentaje</td>";
        out = out + "</tr>";    
        
        out = out + "<tr>"; 
        out = out + "<td style=\"text-align:center; font-weight:bold;\" rowspan=\"" + this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(this.i_turno).getGrupos().get(this.i_grupo).getAlumnos().size() + "\">" + this.grupo + "</td>";
        
        for(int o=0; o<this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(this.i_turno).getGrupos().get(this.i_grupo).getAlumnos().size(); o++) {
            Alumno al = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(this.i_turno).getGrupos().get(this.i_grupo).getAlumnos().get(o);                                   

            if(o!=0) {
                out = out + "<tr>";
            } 

            out = out + "<td style=\"text-align:left;\">" + al.getId() + " </td>";
            out = out + "<td style=\"text-align:center;\">" + al.getAciertos() + "</td>";
            out = out + "<td style=\"text-align:center;\">" + df.format(al.getPorcentaje_aciertos()) + "%</td>";
            out = out + "</tr>";
        } 
        
        out = out + "<tr>";
        out = out + "<td colspan=\"2\" style=\"text-align:center; font-weight:bold;\">Total grupo:</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">" + df.format(this.promedio_grupo) + "</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">" + df.format(this.porcentaje_aciertos_grupo) + "%</td>";
        out = out + "</tr>";
       
        out = out + "</table>";
        out = out + "<br /><br />";                                                                                              

        //cerramos rengl칩n de tabla principal                
        out = out + "</td>";
        out = out + "</tr>";  
        
        //abrimos rengl칩n de tabla principal
        out = out + "<tr>";
        out = out + "<td style=\"text-align:center; border:0;\">";        
        
        //Imprimimos la tabla con los puntajes de los grupos de la escuela seleccionada
        out = out +
                "<table align=\"center\" width=\"50%\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">"                 
                + "<caption style=\"text-align:left; font-weight:bold; font-size: 9px;\">Tabla 2. Resultados generales de la escuela " + this.escuela + " de la zona escolar " + this.zona_escolar + " del municipio de " + this.municipio + ".</caption>"
                + "<tr>";

        out = out + "<td style=\"text-align:center; font-weight:bold;\">Turno</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">Grupo</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">Promedio</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">Porcentaje</td>";
        out = out + "</tr>";    
                         
        for(int x=0; x<this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().size(); x++) {                             
            out = out + "<tr>";  
            out = out + "<td style=\"text-align:center; font-weight:bold;\" rowspan=\"" + this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(x).getGrupos().size() + "\">" + this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(x).getId_turno() + "</td>";
        
            for(int o=0; o<this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(x).getGrupos().size(); o++) {
                Grupo gr = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(x).getGrupos().get(o);                                                    

                if(o!=0) {
                    out = out + "<tr>";
                }
                
                out = out + "<td style=\"text-align:left;\">" + gr.getId_grupo() + " </td>";
                out = out + "<td style=\"text-align:center;\">" + df.format(gr.getPuntaje_promedio_grupo()) + "</td>";
                out = out + "<td style=\"text-align:center;\">" + df.format(gr.getPorcentaje_aciertos_grupo()) + "%</td>";   
                
                out = out + "</tr>";
            }
            
        }                                                                        

        out = out + "<tr>";
        out = out + "<td colspan=\"2\" style=\"text-align:center; font-weight:bold;\">Total escuela:</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">" + df.format(this.promedio_escuela) + "</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">" + df.format(this.porcentaje_aciertos_escuela) + "%</td>";
        out = out + "</tr>";
        
        out = out + "</table>";
        out = out + "<br /><br />";                                                                                              

        //cerramos rengl칩n de tabla principal                
        out = out + "</td>";
        out = out + "</tr>"; 
                                
        //abrimos rengl칩n de tabla principal
        out = out + "<tr>";
        out = out + "<td style=\"text-align:center; border:0;\">";
        
        //Imprimimos gr치fica de los grupos de una escuela.
        String nombreArchivo = "\"file:temp/inf_docentes/grupos_escuela.PNG\"";
        out = out + "<img src=" + nombreArchivo + " width=\"500\" height=\"300\" border=\"0\">";
        out = out + "<br /><br />";

        //cerramos rengl칩n de tabla principal                
        out = out + "</td>";
        out = out + "</tr>";         
                                
        //Informe de resultados por unidad de aprendizaje para Docentes.
        out = out + "<tr>"
                    + "<th scope=\"col\"><h2>Informe de resultados por unidad de aprendizaje para Docentes.</h2></th>"
                + "  </tr>";
       
        //Abrimos rengl칩n de la tabla principal
        out = out + "<tr>";
        out = out + "<td>"; 
        
        out = out + "<table align=\"center\" width=\"60%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">";                
        out = out + "<tr>";
        out = out + "<td>Los estudiantes del grupo <strong>" + this.grupo + "</strong> obtuvieron el puntaje m&aacute;s alto en la unidad de aprendizaje <strong>" + getUnidadMax() + "</strong>, mientras que en la unidad de aprendizaje <strong>" + getUnidadMin() + "</strong> obtuvieron el puntaje m&aacute;s bajo. " + getTextoUASuperior() + ".<br /></td>";        
        out = out + "</tr>";
        out = out + "</table>";
        
        //cerramos rengl칩n de tabla principal                
        out = out + "</td>";
        out = out + "</tr>";
                        
        //abrimos rengl칩n de tabla principal
        out = out + "<tr>";
        out = out + "<td style=\"text-align:center; border:0;\">";        
        
        //Imprimimos la tabla con los puntajes de los alumnos del grupo seleccionado por unidad de aprendizaje
        out = out +
                "<table align=\"center\" width=\"60%\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">" 
                + "<caption style=\"text-align:left; font-weight:bold; font-size: 9px;\">Tabla 3. Resultados por unidad de aprendizaje del grupo " + this.grupo + " del turno " + this.turno + " de la escuela " + this.escuela + " de la zona escolar " + this.zona_escolar + " del municipio de " + this.municipio + ".</caption>"
                + "<tr>";
        
        out = out + "<td style=\"text-align:center; font-weight:bold;\" rowspan=\"2\">No. de examen</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\" colspan=\"" + this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size() + "\">Puntaje</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\" colspan=\"" + this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size() + "\">Porcentaje</td>";
        out = out + "</tr>";    
        
        out = out + "<tr>";   
        
        for(int i=0; i<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); i++) {
            out = out + "<td style=\"text-align:center; font-weight:bold;\">" + this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().get(i).getNombre() + "</td>";
        }
        
        for(int i=0; i<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); i++) {
            out = out + "<td style=\"text-align:center; font-weight:bold;\">" + this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().get(i).getNombre() + "</td>";
        }
                
        out = out + "</tr>";    
        
        out = out + "<tr>"; 
        
        for(int o=0; o<this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(this.i_turno).getGrupos().get(this.i_grupo).getAlumnos().size(); o++) {
            Alumno al = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(this.i_turno).getGrupos().get(this.i_grupo).getAlumnos().get(o);                                   

            if(o!=0) {
                out = out + "<tr>";
            } 

            out = out + "<td style=\"text-align:left;\">" + al.getId() + " </td>";
            
            for(int j=0; j<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); j++) {
                out = out + "<td style=\"text-align:center;\">" + al.getPuntajes_ua()[j] + "</td>";
            }
            
            for(int j=0; j<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); j++) {
                out = out + "<td style=\"text-align:center;\">" + df.format(al.getPorcentajes_ua()[j]) + "%</td>";
            }
                                    
            out = out + "</tr>";
        } 
        
        Grupo gr = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(this.i_turno).getGrupos().get(this.i_grupo);                                   
        out = out + "<tr>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\">Total grupo:</td>";
        
        for(int j=0; j<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); j++) {
            out = out + "<td style=\"text-align:center; font-weight:bold;\">" + df.format(gr.getPromedios_ua()[j]) + "</td>";
        }
        
        for(int j=0; j<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); j++) {
            out = out + "<td style=\"text-align:center; font-weight:bold;\">" + df.format(gr.getPorcentajes_aciertos_ua()[j]) + "%</td>";
        }
                
        out = out + "</tr>";
       
        out = out + "</table>";
        out = out + "<br /><br />";                                                                                              

        //cerramos rengl칩n de tabla principal                
        out = out + "</td>";
        out = out + "</tr>";  
        
        //abrimos rengl칩n de tabla principal
        out = out + "<tr>";
        out = out + "<td style=\"text-align:center; border:0;\">";        
        
        //Imprimimos la tabla con los puntajes de los grupos de la escuela seleccionada
        out = out +
                "<table align=\"center\" width=\"60%\" border=\"1\" cellspacing=\"0\" cellpadding=\"0\">"                 
                + "<caption style=\"text-align:left; font-weight:bold; font-size: 9px;\">Tabla 4. Resultados por unidad de aprendizaje de la escuela " + this.escuela + " de la zona escolar " + this.zona_escolar + " del municipio de " + this.municipio + ".</caption>"
                + "<tr>";

        out = out + "<td style=\"text-align:center; font-weight:bold;\" rowspan=\"2\">Turno</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\" rowspan=\"2\">Grupo</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\" colspan=\"" + this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size() + "\">Promedio</td>";
        out = out + "<td style=\"text-align:center; font-weight:bold;\" colspan=\"" + this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size() + "\">Porcentaje</td>";
        out = out + "</tr>";  
        
        out = out + "<tr>";   
        
        for(int i=0; i<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); i++) {
            out = out + "<td style=\"text-align:center; font-weight:bold;\">" + this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().get(i).getNombre() + "</td>";
        }
        
        for(int i=0; i<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); i++) {
            out = out + "<td style=\"text-align:center; font-weight:bold;\">" + this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().get(i).getNombre() + "</td>";
        }
                
        out = out + "</tr>";  
                         
        for(int x=0; x<this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().size(); x++) {                             
            out = out + "<tr>";  
            out = out + "<td style=\"text-align:center; font-weight:bold;\" rowspan=\"" + this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(x).getGrupos().size() + "\">" + this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(x).getId_turno() + "</td>";
        
            for(int o=0; o<this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(x).getGrupos().size(); o++) {
                gr = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(x).getGrupos().get(o);                                                    

                if(o!=0) {
                    out = out + "<tr>";
                }
                
                out = out + "<td style=\"text-align:left;\">" + gr.getId_grupo() + " </td>";
                
                for(int i=0; i<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); i++) {
                    out = out + "<td style=\"text-align:center;\">" + df.format(gr.getPromedios_ua()[i]) + "</td>";
                }
                
                for(int i=0; i<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); i++) {
                    out = out + "<td style=\"text-align:center;\">" + df.format(gr.getPorcentajes_aciertos_ua()[i]) + "%</td>";
                }
                                                
                out = out + "</tr>";
            }
            
        }                                                                        

        out = out + "<tr>";
        out = out + "<td colspan=\"2\" style=\"text-align:center; font-weight:bold;\">Total escuela:</td>";
        
        Escuela esc = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela);                                                    
        
        for(int i=0; i<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); i++) {
            out = out + "<td style=\"text-align:center; font-weight:bold;\">" + df.format(esc.getPromedios_ua()[i]) + "</td>";
        }
        
        for(int i=0; i<this.modelosExamenes.get(this.i_modelo).getUnidades_aprendizaje().size(); i++) {
            out = out + "<td style=\"text-align:center; font-weight:bold;\">" + df.format(esc.getPorcentajes_aciertos_ua()[i]) + "%</td>";
        }
                
        out = out + "</tr>";
        
        out = out + "</table>";
        out = out + "<br /><br />";                                                                                              

        //cerramos rengl칩n de tabla principal                
        out = out + "</td>";
        out = out + "</tr>"; 
        
        for(int i=0; i<graficas_turnos_ua.size(); i++) {
            //abrimos rengl칩n de tabla principal
            out = out + "<tr>";
            out = out + "<td style=\"text-align:center; border:0;\">";

            //Imprimimos gr치fica de los grupos de una escuela.
            nombreArchivo = "\"file:temp/inf_docentes/grafica_ua" + i + ".PNG\"";
            out = out + "<img src=" + nombreArchivo + " width=\"500\" height=\"300\" border=\"0\">";
            out = out + "<br /><br />";

            //cerramos rengl칩n de tabla principal                
            out = out + "</td>";
            out = out + "</tr>"; 
        }        
        
        out = out + "</table>";
              
        this.panel_resultados.setText(out); 
    }

    private String getTextoCompGrupoEsc() {
        if(this.promedio_grupo>this.promedio_escuela) {
            return "superior";
        } else {
            if(this.promedio_grupo<this.promedio_escuela) {
                return "menor";
            } else {
                return "igual";
            }
        }
    }

    private int getMaxPuntajeGrupo() {
        int max = 0;
        
        for(int i=0; i<this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(i_turno).getGrupos().get(i_grupo).getAlumnos().size(); i++) {
            int aciertos = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(i_turno).getGrupos().get(i_grupo).getAlumnos().get(i).getAciertos();
            
            if(aciertos>max) {
                max = aciertos;
            }
        }
        
        return max;
    }
    
    private int getMinPuntajeGrupo() {
        int min = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(i_turno).getGrupos().get(i_grupo).getAlumnos().get(0).getAciertos();
        
        for(int i=0; i<this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(i_turno).getGrupos().get(i_grupo).getAlumnos().size(); i++) {
            int aciertos = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(i_turno).getGrupos().get(i_grupo).getAlumnos().get(i).getAciertos();
            
            if(aciertos<min) {
                min = aciertos;
            }
        }
        
        return min;
    }

    private String getUnidadMax() {
        String ua_max = "";
        Grupo gr = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(this.i_turno).getGrupos().get(this.i_grupo);                                                    
        double max = gr.getPromedios_ua()[0];
        
        for(int i=0; i<this.modelosExamenes.get(i_modelo).getUnidades_aprendizaje().size(); i++) {
            
            if(gr.getPromedios_ua()[i]>max) {
                max = gr.getPromedios_ua()[i];
                ua_max = this.modelosExamenes.get(i_modelo).getUnidades_aprendizaje().get(i).getNombre();
            }
        }
        
        return ua_max;
    }
    
    private String getUnidadMin() {
        String ua_min = "";
        Grupo gr = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(this.i_turno).getGrupos().get(this.i_grupo);                                                    
        double min = gr.getPromedios_ua()[0];
        
        for(int i=0; i<this.modelosExamenes.get(i_modelo).getUnidades_aprendizaje().size(); i++) {
            
            if(gr.getPromedios_ua()[i]<min) {
                min = gr.getPromedios_ua()[i];
                ua_min = this.modelosExamenes.get(i_modelo).getUnidades_aprendizaje().get(i).getNombre();
            }
        }
        
        return ua_min;
    }

    private String getTextoUASuperior() {
        String texto_sup = "";
        List<String> lista = new ArrayList<>();
        Grupo gr = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela).getTurnos().get(this.i_turno).getGrupos().get(this.i_grupo);                                                            
        Escuela es = this.modelosExamenes.get(this.i_modelo).getZona_escolar_por_municipio()[this.i_municipio].get(this.i_zona_escolar).getEscuelas().get(this.i_escuela);                                                            
        
        for(int i=0; i<this.modelosExamenes.get(i_modelo).getUnidades_aprendizaje().size(); i++) {            
            
            if(gr.getPromedios_ua()[i]>es.getPromedios_ua()[i]) {
                lista.add(this.modelosExamenes.get(i_modelo).getUnidades_aprendizaje().get(i).getNombre());
            }
        }
        
        if(lista.size()>0) {
            texto_sup = "En comparaci&oacute;n con el promedio de cada unidad de aprendizaje de los grupos examinados en esta escuela, el grupo " + this.grupo + " fue superior en "; 
            
            if(lista.size()>1) {
                texto_sup = texto_sup + "las unidades ";
            } else {
                texto_sup = texto_sup + "la unidad ";
            }
            
            for(int i=0; i<lista.size(); i++) {
                texto_sup = texto_sup + "<strong>" + lista.get(i) + "</strong>";
                
                if((i+1)<lista.size()){
                    
                    if((i+2)<lista.size()){
                        texto_sup = texto_sup + ", ";
                    } else {
                        texto_sup = texto_sup + " y ";
                    }
                    
                } else {
                    texto_sup = texto_sup + ".";
                }
            }
        }
        
        return texto_sup;
    }

    private void crearGraficasUA() {
        //Graficas por turno y unidad de aprendizaje
        graficas_turnos_ua = new ArrayList<>();
               
        for(int m=0; m<this.modelosExamenes.get(i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().size(); m++) {
            String nombre_turno = this.modelosExamenes.get(i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(m).getId_turno();                                
            //Creamos las graficas por grupo por unidad de aprendizaje        
            DefaultCategoryDataset dataset = new DefaultCategoryDataset(); 

            for(int n=0; n<this.modelosExamenes.get(i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(m).getGrupos().size(); n++) {
                String nombre_grupo = this.modelosExamenes.get(i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(m).getGrupos().get(n).getId_grupo();

                for(int i=0; i<this.modelosExamenes.get(i_modelo).getUnidades_aprendizaje().size(); i++) {
                    String nombre_ua = this.modelosExamenes.get(i_modelo).getUnidades_aprendizaje().get(i).getNombre();
                    dataset.setValue(this.modelosExamenes.get(i_modelo).getZona_escolar_por_municipio()[i_municipio].get(i_zona_escolar).getEscuelas().get(i_escuela).getTurnos().get(m).getGrupos().get(n).getPorcentajes_aciertos_ua()[i], nombre_grupo, nombre_ua);
                }                                                            
            }
                        
            JFreeChart grafica = ChartFactory.createBarChart("Escuela " + this.escuela + ", Turno " + nombre_turno, "Unidades de aprendizaje", "Porcentaje", dataset, PlotOrientation.VERTICAL, true, true, true);
            grafica.setBackgroundPaint(Color.white);

            final CategoryPlot plot = (CategoryPlot) grafica.getPlot();

            plot.setBackgroundPaint(new Color(240, 240, 240));
            plot.setRangeGridlinePaint(Color.darkGray);
            plot.setRangeGridlinesVisible(true);
            plot.setDomainGridlinePaint(Color.darkGray);            

            final NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
            rangeAxis.setUpperBound(105);

            // customise the renderer...
            final BarRenderer renderer = (BarRenderer) plot.getRenderer();        
            //renderer.setDrawShapes(true);
            renderer.setSeriesPaint(0, new Color(79, 129, 189));
            renderer.setMaximumBarWidth(.15);
            renderer.setItemMargin(.02);

            renderer.setSeriesItemLabelGenerator(0, new StandardCategoryItemLabelGenerator());
            renderer.setSeriesItemLabelsVisible(0, true);                        
            renderer.setSeriesVisible(0, true);

            renderer.setSeriesItemLabelGenerator(1, new StandardCategoryItemLabelGenerator());
            renderer.setSeriesItemLabelsVisible(1, true);                        
            renderer.setSeriesVisible(1, true);                    

            plot.setRenderer(renderer);
            
            graficas_turnos_ua.add(grafica);
        }
    }
}
